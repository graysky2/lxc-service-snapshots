#!/bin/bash
# wireguard-lss by graysky
# version @VERSION@

setupcheck() {
  CONFIG=/etc/conf.d/wireguard-lss.conf

  if [[ -f "$CONFIG" ]]; then
    . "$CONFIG"
  else
    echo "$CONFIG not found so exiting!"
    exit 1
  fi

  # setup global vars
  LXCPREFIX="/var/lib/lxc"
  BASEPATH="$LXCPREFIX/$BASE/rootfs"
  LXCPATH="$LXCPREFIX/$LXC"

  # make sure there is a config for the base lxc
  [[ -f $LXCPREFIX/$BASE/config ]] || {
    echo "Cannot locate the base LXC config file."
  echo "Copy the template from /usr/share/lxc-service-snapshots and try again."
  exit 1; }

  # read in the MAC from the base lxc
  BASELASTBLOCK=$(grep -o -i '[0-9A-F]\{2\}\(:[0-9A-F]\{2\}\)\{5\}' "$LXCPREFIX/$BASE/config" | awk -F: '{print $6}')

  # TODO check that the user defined a valid MAC address in the base config

  # make sure $LASTMACBLOCK is hexadecimal
  if ! echo "$LASTMACBLOCK" | grep -o -i '[0-9A-F]\{2\}' &>/dev/null; then
    echo "Bad value for LASTMACBLOCK so exiting: $LASTMACBLOCK"
    exit 1
  fi

  # make sure there is at least 1 wireguard server config file in the base lxc
  [[ -f "$BASEPATH/etc/wireguard/$WGCFG1.conf" ]] || {
    echo "Cannot locate $WGCFG1 config file in the base container."
  exit 1; }

  # 2nd and 3rd are optional
  for var in "$WGCFG2" "$WGCFG3"; do
    if [[ -n "$var" ]]; then
      [[ -f "$BASEPATH/etc/wireguard/$var.conf" ]] || {
        echo "Cannot locate $var config file in the base container."
      exit 1; }
    fi
  done
}

config() {
  # change hwaddr on the base image for consistent dhcp behavior
  sed -i -e "/^lxc.net.0.hwaddr/ s,$BASELASTBLOCK,$LASTMACBLOCK," "$LXCPATH/config"

  # TODO add support for static ip addresses

  # remove mounts since the base image gets updated not the snapshot
  #sed -i -e '/^lxc.mount.entry/ s,lxc,#lxc,g' "$LXCPATH/config"
  sed -i -e '/^lxc.mount.entry/d' -i -e '/^## mount/d' "$LXCPATH/config"

  # enable services in delta space
  for var in "$WGCFG1" "$WGCFG2" "$WGCFG3"; do
    if [[ -n "$var" ]]; then
      mkdir -p "$LXCPATH/overlay/delta/etc/systemd/system/multi-user.target.wants"
      ln -s /usr/lib/systemd/system/wg-quick@.service \
        "$LXCPATH/overlay/delta/etc/systemd/system/multi-user.target.wants/wg-quick@$var.service"
    fi
  done
  
  # assume the base image has pi-hole-server and pi-hole-FTL installed
  # and since pi-hole-server ships with timers enabled, let's mask them since
  # wireguard doesn't give a fuck about them
  for timer in pi-hole-gravity pi-hole-logtruncate; do
    ln -s /dev/null \
      "$LXCPATH/overlay/delta/etc/systemd/system/$timer.timer"
  done

  ln -s /dev/null \
    "$LXCPATH/overlay/delta/etc/systemd/system/multi-user.target.wants/pihole-FTL.service"
}

stopit() {
  lxc-destroy -n "$LXC" -f
}

case "$1" in
  u)
    setupcheck || exit 1
    # in case of an ungraceful shutdown, snapshot will be present so delete it
    rm -rf /var/lib/lxc/"$LXC"
    lxc-copy -n "$BASE" -N "$LXC" -M -s -B overlayfs || exit 1
    config || exit 1
    lxc-start -d -n "$LXC" || exit 1
    ;;
  d)
    setupcheck
    stopit
    ;;
  *)
    echo "$0 {u|d}"
    exit 0
esac

# vim:set ts=2 sw=2 et:
