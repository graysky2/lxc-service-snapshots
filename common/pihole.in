#!/bin/bash
# pihole-lss by graysky
# version @VERSION@

setupcheck() {
  CONFIG=/etc/conf.d/pihole-lss.conf

  if [[ -f "$CONFIG" ]]; then
    . "$CONFIG"
  else
    echo "$CONFIG not found so exiting!"
    exit 1
  fi

  # setup global vars
  LXCPREFIX="/var/lib/lxc"
  BASEPATH="$LXCPREFIX/$BASE/rootfs"
  LXCPATH="$LXCPREFIX/$LXC"

  # make sure there is a config for the base lxc
  [[ -f $LXCPREFIX/$BASE/config ]] || {
    echo "Cannot locate the base LXC config file."
  echo "Copy the template from /usr/share/lxc-service-snapshots and try again."
  exit 1; }

  # read in the MAC from the base lxc
  BASELASTBLOCK=$(grep -o -i '[0-9A-F]\{2\}\(:[0-9A-F]\{2\}\)\{5\}' "$LXCPREFIX/$BASE/config" | awk -F: '{print $6}')

  # TODO check that the user defined a valid MAC address in the base config

  # make sure $LASTMACBLOCK is hexadecimal
  if ! echo "$LASTMACBLOCK" | grep -o -i '[0-9A-F]\{2\}' &>/dev/null; then
    echo "Bad value for LASTMACBLOCK so exiting: $LASTMACBLOCK"
    exit 1
  fi

  # TODO check the SERVICES array against what is in the base image
}

config() {
  # change hwaddr on the base image for consistent dhcp behavior
  sed -i -e "/^lxc.net.0.hwaddr/ s,$BASELASTBLOCK,$LASTMACBLOCK," "$LXCPATH/config"

  # remove mounts since the base image gets updated not the snapshot
  sed -i -e '/^lxc.mount.entry/ s,lxc,#lxc,g' "$LXCPATH/config"

  # enable services in delta0 space
  mkdir -p "$LXCPATH/delta0/etc/systemd/system/multi-user.target.wants"
  for UNIT in "${SERVICES[@]}"; do
    ln -s /usr/lib/systemd/system/"$UNIT".service \
      "$LXCPATH/delta0/etc/systemd/system/multi-user.target.wants/$UNIT.service"
  done
}

stopit() {
  # define key files to save back to the media bound base image all found in /etc/pihole
  # add wildcard block lists from /etc/pihole which change depending on the user
  PID1=$(lxc-info -p -n "$LXC" | awk '{print $2}')
  mapfile -t SaveArr < <(find /proc/"$PID1"/root/etc/pihole -type f -name 'list.*' -printf "%f\n")

  # now add key files of a static nature
  SaveArr+=(
  adlists.list adlists.default black.list blacklist.txt local.list gravity.list
  pihole-FTL.conf setupVars.conf whitelist.txt
  )

  # copy these files to /tmp before destroying the container
  for i in "${SaveArr[@]}"; do
    [[ -f "$LXCPATH/delta0/etc/pihole/$i" ]] &&
      cp -a "$LXCPATH/delta0/etc/pihole/$i" /tmp
  done

  # other files worth saving go here
  [[ -f "$LXCPATH/etc/dnsmasq.d/01-pihole.conf" ]] &&
    cp -a "$LXCPATH/etc/dnsmasq.d/01-pihole.conf" /tmp

  # since pihole-FTL.service will write out the database when it quits we do
  # that here before we destroy the snapshot

  lxc-attach -n "$LXC" -- systemctl stop pihole-FTL

  # now copy the freshly written database
  [[ -f "$LXCPATH/delta0/etc/pihole/pihole-FTL.db" ]] &&
    cp -a "$LXCPATH/delta0/etc/pihole/pihole-FTL.db" /tmp

  lxc-destroy -n "$LXC" -f

  # copy back the files from /tmp to the base lxc on the media
  for i in "${SaveArr[@]}"; do
		[[ -f /tmp/"$i" ]] && mv /tmp/"$i" "$BASEPATH/etc/pihole"
  done

  [[ -f /tmp/01-pihole.conf ]] &&
    mv /tmp/01-pihole.conf "$BASEPATH/etc/dnsmasq.d"
	
	[[ -f /tmp/pihole-FTL.db ]] &&
    mv /tmp/pihole-FTL.db "$BASEPATH/etc/pihole"
}

case "$1" in
  u)
    setupcheck || exit 1
    # in case of an ungraceful shutdown, snapshot will be present so delete it
    rm -rf /var/lib/lxc/"$LXC"
    lxc-copy -n "$BASE" -N "$LXC" -M -s -B overlayfs || exit 1
    config || exit 1
    lxc-start -d -n "$LXC" || exit 1
    ;;
  d)
    setupcheck
    stopit
    ;;
  *)
    echo "$0 {u|d}"
    exit 0
esac

# vim:set ts=2 sw=2 et:
